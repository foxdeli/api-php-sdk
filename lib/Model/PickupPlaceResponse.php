<?php
/**
 * PickupPlaceResponse
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Foxdeli\ApiPhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Foxdeli Pickup Place Service API
 *
 * Foxdeli API documentation
 *
 * The version of the OpenAPI document: 3.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Foxdeli\ApiPhpSdk\Model;

use \ArrayAccess;
use \Foxdeli\ApiPhpSdk\ObjectSerializer;

/**
 * PickupPlaceResponse Class Doc Comment
 *
 * @category Class
 * @description Pickup Place
 * @package  Foxdeli\ApiPhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class PickupPlaceResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PickupPlaceResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'eshop_id' => 'string',
        'type' => '\Foxdeli\ApiPhpSdk\Model\DestinationType',
        'carrier' => '\Foxdeli\ApiPhpSdk\Model\Carrier',
        'origin_pickup_place_id' => 'string',
        'origin' => '\Foxdeli\ApiPhpSdk\Model\OriginType',
        'country_code' => '\Foxdeli\ApiPhpSdk\Model\CountryCode',
        'zone_id' => 'string',
        'name' => 'string',
        'location' => '\Foxdeli\ApiPhpSdk\Model\LocationResponse',
        'note' => 'string',
        'phone' => 'string',
        'email' => 'string',
        'image' => 'string',
        'storage_time' => 'int',
        'opening_hours' => '\Foxdeli\ApiPhpSdk\Model\OpeningHoursResponse'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'uuid',
        'eshop_id' => 'uuid',
        'type' => null,
        'carrier' => null,
        'origin_pickup_place_id' => null,
        'origin' => null,
        'country_code' => null,
        'zone_id' => null,
        'name' => null,
        'location' => null,
        'note' => null,
        'phone' => null,
        'email' => null,
        'image' => null,
        'storage_time' => 'int32',
        'opening_hours' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return string[]
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return string[]
     * @phpstan-return array<string, string|null>
     * @psalm-return array<string, string|null>
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'eshop_id' => 'eshopId',
        'type' => 'type',
        'carrier' => 'carrier',
        'origin_pickup_place_id' => 'originPickupPlaceId',
        'origin' => 'origin',
        'country_code' => 'countryCode',
        'zone_id' => 'zoneId',
        'name' => 'name',
        'location' => 'location',
        'note' => 'note',
        'phone' => 'phone',
        'email' => 'email',
        'image' => 'image',
        'storage_time' => 'storageTime',
        'opening_hours' => 'openingHours'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'eshop_id' => 'setEshopId',
        'type' => 'setType',
        'carrier' => 'setCarrier',
        'origin_pickup_place_id' => 'setOriginPickupPlaceId',
        'origin' => 'setOrigin',
        'country_code' => 'setCountryCode',
        'zone_id' => 'setZoneId',
        'name' => 'setName',
        'location' => 'setLocation',
        'note' => 'setNote',
        'phone' => 'setPhone',
        'email' => 'setEmail',
        'image' => 'setImage',
        'storage_time' => 'setStorageTime',
        'opening_hours' => 'setOpeningHours'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'eshop_id' => 'getEshopId',
        'type' => 'getType',
        'carrier' => 'getCarrier',
        'origin_pickup_place_id' => 'getOriginPickupPlaceId',
        'origin' => 'getOrigin',
        'country_code' => 'getCountryCode',
        'zone_id' => 'getZoneId',
        'name' => 'getName',
        'location' => 'getLocation',
        'note' => 'getNote',
        'phone' => 'getPhone',
        'email' => 'getEmail',
        'image' => 'getImage',
        'storage_time' => 'getStorageTime',
        'opening_hours' => 'getOpeningHours'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return string[]
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return string[]
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return string[]
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['eshop_id'] = $data['eshop_id'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['carrier'] = $data['carrier'] ?? null;
        $this->container['origin_pickup_place_id'] = $data['origin_pickup_place_id'] ?? null;
        $this->container['origin'] = $data['origin'] ?? null;
        $this->container['country_code'] = $data['country_code'] ?? null;
        $this->container['zone_id'] = $data['zone_id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['location'] = $data['location'] ?? null;
        $this->container['note'] = $data['note'] ?? null;
        $this->container['phone'] = $data['phone'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['image'] = $data['image'] ?? null;
        $this->container['storage_time'] = $data['storage_time'] ?? null;
        $this->container['opening_hours'] = $data['opening_hours'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return string[] invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['carrier'] === null) {
            $invalidProperties[] = "'carrier' can't be null";
        }
        if ($this->container['origin_pickup_place_id'] === null) {
            $invalidProperties[] = "'origin_pickup_place_id' can't be null";
        }
        if ($this->container['origin'] === null) {
            $invalidProperties[] = "'origin' can't be null";
        }
        if ($this->container['country_code'] === null) {
            $invalidProperties[] = "'country_code' can't be null";
        }
        if ($this->container['zone_id'] === null) {
            $invalidProperties[] = "'zone_id' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['location'] === null) {
            $invalidProperties[] = "'location' can't be null";
        }
        if ($this->container['phone'] === null) {
            $invalidProperties[] = "'phone' can't be null";
        }
        if ($this->container['email'] === null) {
            $invalidProperties[] = "'email' can't be null";
        }
        if ($this->container['opening_hours'] === null) {
            $invalidProperties[] = "'opening_hours' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id Identifier of pickup place
     *
     * @return self
     */
    public function setId($id) : self
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets eshop_id
     *
     * @return string|null
     */
    public function getEshopId()
    {
        return $this->container['eshop_id'];
    }

    /**
     * Sets eshop_id
     *
     * @param string|null $eshop_id Id of the eshop this pickup place belongs to
     *
     * @return self
     */
    public function setEshopId($eshop_id) : self
    {
        $this->container['eshop_id'] = $eshop_id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return \Foxdeli\ApiPhpSdk\Model\DestinationType
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|int|\Foxdeli\ApiPhpSdk\Model\DestinationType $type type
     *
     * @return self
     */
    public function setType($type) : self
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets carrier
     *
     * @return \Foxdeli\ApiPhpSdk\Model\Carrier
     */
    public function getCarrier()
    {
        return $this->container['carrier'];
    }

    /**
     * Sets carrier
     *
     * @param string|int|\Foxdeli\ApiPhpSdk\Model\Carrier $carrier carrier
     *
     * @return self
     */
    public function setCarrier($carrier) : self
    {
        $this->container['carrier'] = $carrier;

        return $this;
    }

    /**
     * Gets origin_pickup_place_id
     *
     * @return string
     */
    public function getOriginPickupPlaceId()
    {
        return $this->container['origin_pickup_place_id'];
    }

    /**
     * Sets origin_pickup_place_id
     *
     * @param string $origin_pickup_place_id Origin ID of parcelShop/Box
     *
     * @return self
     */
    public function setOriginPickupPlaceId($origin_pickup_place_id) : self
    {
        $this->container['origin_pickup_place_id'] = $origin_pickup_place_id;

        return $this;
    }

    /**
     * Gets origin
     *
     * @return \Foxdeli\ApiPhpSdk\Model\OriginType
     */
    public function getOrigin()
    {
        return $this->container['origin'];
    }

    /**
     * Sets origin
     *
     * @param string|int|\Foxdeli\ApiPhpSdk\Model\OriginType $origin origin
     *
     * @return self
     */
    public function setOrigin($origin) : self
    {
        $this->container['origin'] = $origin;

        return $this;
    }

    /**
     * Gets country_code
     *
     * @return \Foxdeli\ApiPhpSdk\Model\CountryCode
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     *
     * @param string|int|\Foxdeli\ApiPhpSdk\Model\CountryCode $country_code country_code
     *
     * @return self
     */
    public function setCountryCode($country_code) : self
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets zone_id
     *
     * @return string
     */
    public function getZoneId()
    {
        return $this->container['zone_id'];
    }

    /**
     * Sets zone_id
     *
     * @param string $zone_id zone_id
     *
     * @return self
     */
    public function setZoneId($zone_id) : self
    {
        $this->container['zone_id'] = $zone_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return self
     */
    public function setName($name) : self
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets location
     *
     * @return \Foxdeli\ApiPhpSdk\Model\LocationResponse
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param \Foxdeli\ApiPhpSdk\Model\LocationResponse $location location
     *
     * @return self
     */
    public function setLocation($location) : self
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string|null
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string|null $note note
     *
     * @return self
     */
    public function setNote($note) : self
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone Customer phone
     *
     * @return self
     */
    public function setPhone($phone) : self
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return self
     */
    public function setEmail($email) : self
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets image
     *
     * @return string|null
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param string|null $image Pickup place image link
     *
     * @return self
     */
    public function setImage($image) : self
    {
        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets storage_time
     *
     * @return int|null
     */
    public function getStorageTime()
    {
        return $this->container['storage_time'];
    }

    /**
     * Sets storage_time
     *
     * @param int|null $storage_time How long the shipment will be stored, in days
     *
     * @return self
     */
    public function setStorageTime($storage_time) : self
    {
        $this->container['storage_time'] = $storage_time;

        return $this;
    }

    /**
     * Gets opening_hours
     *
     * @return \Foxdeli\ApiPhpSdk\Model\OpeningHoursResponse
     */
    public function getOpeningHours()
    {
        return $this->container['opening_hours'];
    }

    /**
     * Sets opening_hours
     *
     * @param \Foxdeli\ApiPhpSdk\Model\OpeningHoursResponse $opening_hours opening_hours
     *
     * @return self
     */
    public function setOpeningHours($opening_hours) : self
    {
        $this->container['opening_hours'] = $opening_hours;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        $string = json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
        if($string){
            return $string;
        }
        return "";
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string|false
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


