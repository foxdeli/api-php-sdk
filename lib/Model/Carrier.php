<?php
/**
 * Carrier
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Foxdeli\ApiPhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Foxdeli Tracking service API
 *
 * Foxdeli API implements JWT tokens as its chosen method of authentication, requiring that these tokens be included in the HTTP header X-API-Key for each request.
 *
 * The version of the OpenAPI document: 14.70.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Foxdeli\ApiPhpSdk\Model;
use \Foxdeli\ApiPhpSdk\ObjectSerializer;

/**
 * Carrier Class Doc Comment
 *
 * @category Class
 * @description carrier identifier
 * @package  Foxdeli\ApiPhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Carrier
{
    /**
     * Possible values of this enum
     */
    const BUDBEE = 'BUDBEE';

    const CZECH_POST = 'CZECH_POST';

    const DHL = 'DHL';

    const DIY = 'DIY';

    const DPD = 'DPD';

    const DPD_CZ = 'DPD_CZ';

    const DPD_PL = 'DPD_PL';

    const DPD_SK = 'DPD_SK';

    const EU_SHIPMENTS = 'EU_SHIPMENTS';

    const FEDEX = 'FEDEX';

    const GEBRUDER_WEISS = 'GEBRUDER_WEISS';

    const GEIS = 'GEIS';

    const GLS = 'GLS';

    const GLS_CZ = 'GLS_CZ';

    const GLS_HR = 'GLS_HR';

    const GLS_HU = 'GLS_HU';

    const GLS_RO = 'GLS_RO';

    const GLS_SI = 'GLS_SI';

    const GLS_SK = 'GLS_SK';

    const GO_BALIK = 'GO_BALIK';

    const INPOST = 'INPOST';

    const JAPO = 'JAPO';

    const KURIER_123 = 'KURIER_123';

    const KURYR_123 = 'KURYR_123';

    const LANDMARK = 'LANDMARK';

    const MESSENGER = 'MESSENGER';

    const PACKETA = 'PACKETA';

    const PBH = 'PBH';

    const POCZTA_POLSKA = 'POCZTA_POLSKA';

    const PPL = 'PPL';

    const SAMEDAY = 'SAMEDAY';

    const SAMEDAY_RO = 'SAMEDAY_RO';

    const SLOVAKIA_POST = 'SLOVAKIA_POST';

    const SPEEDY = 'SPEEDY';

    const SPRING_GDS = 'SPRING_GDS';

    const SPS = 'SPS';

    const TAXYDROMIKI = 'TAXYDROMIKI';

    const TOP_TRANS = 'TOP_TRANS';

    const ULOZENKA = 'ULOZENKA';

    const URGENT_CARGUS = 'URGENT_CARGUS';

    const UNKNOWN = 'UNKNOWN';

    const UPS = 'UPS';

    const WEDO = 'WEDO';

    const PERSONAL_PICKUP = 'PERSONAL_PICKUP';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::BUDBEE,
            self::CZECH_POST,
            self::DHL,
            self::DIY,
            self::DPD,
            self::DPD_CZ,
            self::DPD_PL,
            self::DPD_SK,
            self::EU_SHIPMENTS,
            self::FEDEX,
            self::GEBRUDER_WEISS,
            self::GEIS,
            self::GLS,
            self::GLS_CZ,
            self::GLS_HR,
            self::GLS_HU,
            self::GLS_RO,
            self::GLS_SI,
            self::GLS_SK,
            self::GO_BALIK,
            self::INPOST,
            self::JAPO,
            self::KURIER_123,
            self::KURYR_123,
            self::LANDMARK,
            self::MESSENGER,
            self::PACKETA,
            self::PBH,
            self::POCZTA_POLSKA,
            self::PPL,
            self::SAMEDAY,
            self::SAMEDAY_RO,
            self::SLOVAKIA_POST,
            self::SPEEDY,
            self::SPRING_GDS,
            self::SPS,
            self::TAXYDROMIKI,
            self::TOP_TRANS,
            self::ULOZENKA,
            self::URGENT_CARGUS,
            self::UNKNOWN,
            self::UPS,
            self::WEDO,
            self::PERSONAL_PICKUP
        ];
    }
}


