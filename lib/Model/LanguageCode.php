<?php
/**
 * LanguageCode
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  Foxdeli\ApiPhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Foxdeli Tracking service API
 *
 * Foxdeli API implements JWT tokens as its chosen method of authentication, requiring that these tokens be included in the HTTP header X-API-Key for each request.
 *
 * The version of the OpenAPI document: 14.68.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Foxdeli\ApiPhpSdk\Model;
use \Foxdeli\ApiPhpSdk\ObjectSerializer;

/**
 * LanguageCode Class Doc Comment
 *
 * @category Class
 * @description Order language - two letter language code - ISO-639-1
 * @package  Foxdeli\ApiPhpSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class LanguageCode
{
    /**
     * Possible values of this enum
     */
    const UNDEFINED = 'undefined';

    const AA = 'aa';

    const AB = 'ab';

    const AE = 'ae';

    const AF = 'af';

    const AK = 'ak';

    const AM = 'am';

    const AN = 'an';

    const AR = 'ar';

    const _AS = 'as';

    const AV = 'av';

    const AY = 'ay';

    const AZ = 'az';

    const BA = 'ba';

    const BE = 'be';

    const BG = 'bg';

    const BH = 'bh';

    const BI = 'bi';

    const BM = 'bm';

    const BN = 'bn';

    const BO = 'bo';

    const BR = 'br';

    const BS = 'bs';

    const CA = 'ca';

    const CE = 'ce';

    const CH = 'ch';

    const CO = 'co';

    const CR = 'cr';

    const CS = 'cs';

    const CU = 'cu';

    const CV = 'cv';

    const CY = 'cy';

    const DA = 'da';

    const DE = 'de';

    const DV = 'dv';

    const DZ = 'dz';

    const EE = 'ee';

    const EL = 'el';

    const EN = 'en';

    const EO = 'eo';

    const ES = 'es';

    const ET = 'et';

    const EU = 'eu';

    const FA = 'fa';

    const FF = 'ff';

    const FI = 'fi';

    const FJ = 'fj';

    const FO = 'fo';

    const FR = 'fr';

    const FY = 'fy';

    const GA = 'ga';

    const GD = 'gd';

    const GL = 'gl';

    const GN = 'gn';

    const GU = 'gu';

    const GV = 'gv';

    const HA = 'ha';

    const HE = 'he';

    const HI = 'hi';

    const HO = 'ho';

    const HR = 'hr';

    const HT = 'ht';

    const HU = 'hu';

    const HY = 'hy';

    const HZ = 'hz';

    const IA = 'ia';

    const ID = 'id';

    const IE = 'ie';

    const IG = 'ig';

    const II = 'ii';

    const IK = 'ik';

    const IO = 'io';

    const IS = 'is';

    const IT = 'it';

    const IU = 'iu';

    const JA = 'ja';

    const JV = 'jv';

    const KA = 'ka';

    const KG = 'kg';

    const KI = 'ki';

    const KJ = 'kj';

    const KK = 'kk';

    const KL = 'kl';

    const KM = 'km';

    const KN = 'kn';

    const KO = 'ko';

    const KR = 'kr';

    const KS = 'ks';

    const KU = 'ku';

    const KV = 'kv';

    const KW = 'kw';

    const KY = 'ky';

    const LA = 'la';

    const LB = 'lb';

    const LG = 'lg';

    const LI = 'li';

    const LN = 'ln';

    const LO = 'lo';

    const LT = 'lt';

    const LU = 'lu';

    const LV = 'lv';

    const MG = 'mg';

    const MH = 'mh';

    const MI = 'mi';

    const MK = 'mk';

    const ML = 'ml';

    const MN = 'mn';

    const MR = 'mr';

    const MS = 'ms';

    const MT = 'mt';

    const MY = 'my';

    const NA = 'na';

    const NB = 'nb';

    const ND = 'nd';

    const NE = 'ne';

    const NG = 'ng';

    const NL = 'nl';

    const NN = 'nn';

    const NO = 'no';

    const NR = 'nr';

    const NV = 'nv';

    const NY = 'ny';

    const OC = 'oc';

    const OJ = 'oj';

    const OM = 'om';

    const _OR = 'or';

    const OS = 'os';

    const PA = 'pa';

    const PI = 'pi';

    const PL = 'pl';

    const PS = 'ps';

    const PT = 'pt';

    const QU = 'qu';

    const RM = 'rm';

    const RN = 'rn';

    const RO = 'ro';

    const RU = 'ru';

    const RW = 'rw';

    const SA = 'sa';

    const SC = 'sc';

    const SD = 'sd';

    const SE = 'se';

    const SG = 'sg';

    const SI = 'si';

    const SK = 'sk';

    const SL = 'sl';

    const SM = 'sm';

    const SN = 'sn';

    const SO = 'so';

    const SQ = 'sq';

    const SR = 'sr';

    const SS = 'ss';

    const ST = 'st';

    const SU = 'su';

    const SV = 'sv';

    const SW = 'sw';

    const TA = 'ta';

    const TE = 'te';

    const TG = 'tg';

    const TH = 'th';

    const TI = 'ti';

    const TK = 'tk';

    const TL = 'tl';

    const TN = 'tn';

    const TO = 'to';

    const TR = 'tr';

    const TS = 'ts';

    const TT = 'tt';

    const TW = 'tw';

    const TY = 'ty';

    const UG = 'ug';

    const UK = 'uk';

    const UR = 'ur';

    const UZ = 'uz';

    const VE = 've';

    const VI = 'vi';

    const VO = 'vo';

    const WA = 'wa';

    const WO = 'wo';

    const XH = 'xh';

    const YI = 'yi';

    const YO = 'yo';

    const ZA = 'za';

    const ZH = 'zh';

    const ZU = 'zu';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::UNDEFINED,
            self::AA,
            self::AB,
            self::AE,
            self::AF,
            self::AK,
            self::AM,
            self::AN,
            self::AR,
            self::_AS,
            self::AV,
            self::AY,
            self::AZ,
            self::BA,
            self::BE,
            self::BG,
            self::BH,
            self::BI,
            self::BM,
            self::BN,
            self::BO,
            self::BR,
            self::BS,
            self::CA,
            self::CE,
            self::CH,
            self::CO,
            self::CR,
            self::CS,
            self::CU,
            self::CV,
            self::CY,
            self::DA,
            self::DE,
            self::DV,
            self::DZ,
            self::EE,
            self::EL,
            self::EN,
            self::EO,
            self::ES,
            self::ET,
            self::EU,
            self::FA,
            self::FF,
            self::FI,
            self::FJ,
            self::FO,
            self::FR,
            self::FY,
            self::GA,
            self::GD,
            self::GL,
            self::GN,
            self::GU,
            self::GV,
            self::HA,
            self::HE,
            self::HI,
            self::HO,
            self::HR,
            self::HT,
            self::HU,
            self::HY,
            self::HZ,
            self::IA,
            self::ID,
            self::IE,
            self::IG,
            self::II,
            self::IK,
            self::IO,
            self::IS,
            self::IT,
            self::IU,
            self::JA,
            self::JV,
            self::KA,
            self::KG,
            self::KI,
            self::KJ,
            self::KK,
            self::KL,
            self::KM,
            self::KN,
            self::KO,
            self::KR,
            self::KS,
            self::KU,
            self::KV,
            self::KW,
            self::KY,
            self::LA,
            self::LB,
            self::LG,
            self::LI,
            self::LN,
            self::LO,
            self::LT,
            self::LU,
            self::LV,
            self::MG,
            self::MH,
            self::MI,
            self::MK,
            self::ML,
            self::MN,
            self::MR,
            self::MS,
            self::MT,
            self::MY,
            self::NA,
            self::NB,
            self::ND,
            self::NE,
            self::NG,
            self::NL,
            self::NN,
            self::NO,
            self::NR,
            self::NV,
            self::NY,
            self::OC,
            self::OJ,
            self::OM,
            self::_OR,
            self::OS,
            self::PA,
            self::PI,
            self::PL,
            self::PS,
            self::PT,
            self::QU,
            self::RM,
            self::RN,
            self::RO,
            self::RU,
            self::RW,
            self::SA,
            self::SC,
            self::SD,
            self::SE,
            self::SG,
            self::SI,
            self::SK,
            self::SL,
            self::SM,
            self::SN,
            self::SO,
            self::SQ,
            self::SR,
            self::SS,
            self::ST,
            self::SU,
            self::SV,
            self::SW,
            self::TA,
            self::TE,
            self::TG,
            self::TH,
            self::TI,
            self::TK,
            self::TL,
            self::TN,
            self::TO,
            self::TR,
            self::TS,
            self::TT,
            self::TW,
            self::TY,
            self::UG,
            self::UK,
            self::UR,
            self::UZ,
            self::VE,
            self::VI,
            self::VO,
            self::WA,
            self::WO,
            self::XH,
            self::YI,
            self::YO,
            self::ZA,
            self::ZH,
            self::ZU
        ];
    }
}


